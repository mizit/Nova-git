<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grid_size = 7;
cell_size = 64;
ship_grid = ds_grid_create(grid_size, grid_size);
ds_grid_set_region(ship_grid, 0, 0, grid_size - 1, grid_size - 1, 0);
active = 1;
alarm[0] = 1;
name = "ship_grid";
my_ship = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open(name + ".ini");
for (var i = 0; i &lt; grid_size; i++)
{
    for (var j = 0; j &lt; grid_size; j++)
    {
        var data;
        data = ini_read_real("Ship permissions", string(i) + "x" + string(j), 0);
        if (data &gt; 0)
        {
            ship_grid[# i, j] |= CELL_EXISTS;
        }
    }
}
var i = 0;
while (ini_section_exists("Part" + string(i)))
{
    var obj_name = asset_get_index(ini_read_string("Part" + string(i), "name", ""));
    if (object_exists(obj_name))
    {
        var obj = instance_create(0, 0, obj_name);
        obj.image_angle = ini_read_real("Part" + string(i), "angle", 0);
        obj.cell_x =  ini_read_real("Part" + string(i), "x", 0);
        obj.cell_y =  ini_read_real("Part" + string(i), "y", 0);
        obj.crnt_grid = id;
    }
    else
    {
        show_message(string(obj_name) + " is not exists");
    }
    i++
}
i = 0;
while (ini_section_exists("Gridded Part" + string(i)))
{
    var obj_name = asset_get_index(ini_read_string("Gridded Part" + string(i), "name", ""));
    if (object_exists(obj_name))
    {
        var obj = instance_create(0, 0, obj_name);
        obj.image_angle = ini_read_real("Gridded Part" + string(i), "angle", 0);
        obj.cell_x =  ini_read_real("Gridded Part" + string(i), "x", 0);
        obj.cell_y =  ini_read_real("Gridded Part" + string(i), "y", 0);
        obj.crnt_grid = id;
    }
    else
    {
        show_message(string(obj_name) + " is not exists");
    }
    i++
}
ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_white);
draw_set_alpha(0.5);
for (var i = 0; i &lt; grid_size; i++)
{
    for (var j = 0; j &lt; grid_size; j++)
    {
        if (ship_grid[# i, j] &amp; CELL_EXISTS)
        {
            draw_rectangle(x + i * cell_size, y + j * cell_size, 
            x + (i + 1) * cell_size, y + (j + 1) * cell_size, 0);
        }
    }
}
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
