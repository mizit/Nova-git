<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_enabled = 1;
view_visible[1] = 1;
view_xview[1] = 0;
view_yview[1] = 0;
view_wport[1] = 500;
view_hport[1] = 500;
view_wview[1] = 250000;
view_hview[1] = 250000;
view_xview[0] = 260000;
view_yview[0] = 260000;

base = 500;
min_scale = 1;
max_scale = 500;
scale = max_scale;
step = scale / 10;

right_pressed = 0;
drag_x = 0;
drag_y = 0;
var file;
file = file_text_open_read("asteroids.dat");
var num = file_text_read_real(file);
repeat(num)
{
    var tx, ty;
    tx = file_text_read_real(file) * 100;
    ty = file_text_read_real(file) * 100;
    tile_add(t_astr, 0, 0, background_get_width(t_astr),
    background_get_height(t_astr), tx - background_get_width(t_astr) / 2, 
    ty - background_get_height(t_astr) / 2, 0);
    //instance_create(tx, ty, obj_asteroid);
}
file_text_close(file);

marks_list = ds_list_create();
max_mark = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>step = scale / 10;
if (right_pressed)
{
    view_xview[1] = max(min(view_xview[1] + (drag_x - display_mouse_get_x())* scale, room_width - view_wview[1]), 0);
    view_yview[1] = max(min(view_yview[1] + (drag_y - display_mouse_get_y())* scale, room_height - view_hview[1]), 0);
}
if (mouse_check_button(mb_right))
{
    drag_x = display_mouse_get_x();
    drag_y = display_mouse_get_y();
    right_pressed = 1;
}
else
{
    right_pressed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var k_w, k_h;
k_w = (mouse_x - view_xview[1]) / view_wview[1];
k_h = (mouse_y - view_yview[1]) / view_hview[1];
scale = min(scale + step, max_scale);
view_wview[1] = scale * base;
view_hview[1] = scale * base;
view_xview[1] = min(max(0, mouse_x - view_wview[1] * k_w), room_width - view_wview[1]);
view_yview[1] = min(max(0, mouse_y - view_hview[1] * k_h), room_height - view_hview[1]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var k_w, k_h;
k_w = (mouse_x - view_xview[1]) / view_wview[1];
k_h = (mouse_y - view_yview[1]) / view_hview[1];
scale = max(scale - step, min_scale);
view_wview[1] = scale * base;
view_hview[1] = scale * base;
view_xview[1] = min(max(0, mouse_x - view_wview[1] * k_w), room_width - view_wview[1]);
view_yview[1] = min(max(0, mouse_y - view_hview[1] * k_h), room_height - view_hview[1]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if (instance_exists(obj_mark))
{
    obj_mark.x = mouse_x;
    obj_mark.y = mouse_y;
}
else
{
    instance_create(mouse_x, mouse_y, obj_mark);
}*/
//show_message(device_mouse_x(0));
if (mouse_x &lt; 250000)
{
    var tmp = instance_create(mouse_x, mouse_y, obj_mark);
    ds_list_add(marks_list, tmp);
    if (ds_list_size(marks_list) &gt; max_mark)
    {
        var tmp = marks_list[| 0]
        ds_list_delete(marks_list, 0);
        with (tmp)
        {
            instance_destroy();
        }
    }
    else
    {
        net_send_mark(obj_net.net_buf, obj_net.socket);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
