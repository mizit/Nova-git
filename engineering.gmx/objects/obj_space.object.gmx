<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_space</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>items_list = ds_list_create();
permission = INV_SPACE;
//y_move = 224;
//x_move = 0;
//move_speed = 15;
//open = 0;
//base_y = y + y_move;
//base_x = x;
//label_sprite = s_tab_label;
//tab_num = 0;
//alarm[0] = 1;
/*label_x = tab_num * sprite_get_width(label_sprite) + 16;
label_y = - sprite_get_height(label_sprite);
label_text = "space";
label_text_x = label_x + sprite_get_width(label_sprite) / 2;
label_text_y = 0 - sprite_get_height(label_sprite) / 2;*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*label_x = tab_num * sprite_get_width(label_sprite) + 16;
label_y = - sprite_get_height(label_sprite);
label_text_x = label_x + sprite_get_width(label_sprite) / 2;
label_text_y = 0 - sprite_get_height(label_sprite) / 2;*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*var tmp_x, tmp_y;
tmp_x = x;
tmp_y = y;
if (open)
{
    if (y + y_move != base_y) 
    {
        if (abs(base_y - (y + y_move)) &lt; move_speed)
        {
            y = base_y - y_move;
        }
        else
        {
            if (y + y_move &lt; base_y)
            {
                y += move_speed;
            }
            else
            {
                y -= move_speed;
            }
        }
    }
    if (x + x_move != base_x) 
    {
        if (abs(base_x - (x + x_move)) &lt; move_speed)
        {
            x = base_x - x_move;
        }
        else
        {
            if (x + x_move &lt; base_x)
            {
                x += move_speed;
            }
            else
            {
                x -= move_speed;
            }
        }
    }
}
else
{
    if (y != base_y) 
    {
        if (abs(base_y - y) &lt; move_speed)
        {
            y = base_y;
        }
        else
        {
            if (y &lt; base_y)
            {
                y += move_speed;
            }
            else
            {
                y -= move_speed;
            }
        }
    }
    if (x != base_x) 
    {
        if (abs(base_x - x) &lt; move_speed)
        {
            x = base_x;
        }
        else
        {
            if (x &lt; base_x)
            {
                x += move_speed;
            }
            else
            {
                x -= move_speed;
            }
        }
    }
}
for (var i = 0; i &lt; ds_list_size(items_list); i++)
{
    items_list[| i].x += (x - tmp_x);
    items_list[| i].y += (y - tmp_y);
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (var i = ds_list_size(items_list) - 1; i &gt;= 0; i--)
{
    var obj = items_list[| i];
    if (point_in_rectangle(mouse_x, mouse_y, obj.x - obj.sprite_width / 2, 
    obj.y - obj.sprite_height / 2, obj.x + obj.sprite_width / 2, 
    obj.y + obj.sprite_height / 2))
    {
        obj.visible = 1;
        obj.dragging = 1;
        ds_list_delete(items_list, i);   
        net_send_item_pickup(obj_net.net_buf, obj_net.socket, obj);     
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
for (var i = 0; i &lt; ds_list_size(items_list); i++)
{
    draw_sprite_ext(items_list[| i].sprite_index, -1, items_list[| i].x, items_list[| i].y,
    1, 1, items_list[| i].image_angle, c_white, 1);
}
/*draw_sprite(label_sprite, -1, x + label_x, y + label_y);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_text(x + label_text_x, y + label_text_y, label_text);*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
